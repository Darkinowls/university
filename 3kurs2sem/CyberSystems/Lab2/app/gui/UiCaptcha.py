# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'QCaptcha.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import base64

from PyQt5 import QtWidgets, QtCore
from PyQt5.QtGui import QImage, QPixmap, QPainter
from PyQt5.QtWidgets import QDialog


class UiCaptcha:
    __dialog: QDialog

    def __init__(self, image_coded: bytes, background_coded: bytes):
        self.__dialog = QDialog()
        self.__dialog.setObjectName("dialog")
        self.__dialog.resize(425, 366)
        self.__dialog.setWindowTitle('Captcha')
        self.gridLayoutWidget = QtWidgets.QWidget(self.__dialog)
        self.gridLayoutWidget.setGeometry(QtCore.QRect(29, 40, 371, 304))
        self.gridLayoutWidget.setObjectName("gridLayoutWidget")
        self.gridLayout = QtWidgets.QGridLayout(self.gridLayoutWidget)
        self.gridLayout.setContentsMargins(0, 0, 0, 0)
        self.gridLayout.setHorizontalSpacing(10)
        self.gridLayout.setVerticalSpacing(25)
        self.gridLayout.setObjectName("gridLayout")
        self.label = QtWidgets.QLabel(self.gridLayoutWidget)
        self.label.setObjectName("label")
        self.label.setPixmap(self.__draw_captcha(base64.b64decode(image_coded), base64.b64decode(background_coded)))
        self.label.setScaledContents(True)
        self.gridLayout.addWidget(self.label, 0, 0, 1, 1)
        self.buttonBox = QtWidgets.QDialogButtonBox(self.gridLayoutWidget)
        self.buttonBox.setOrientation(QtCore.Qt.Horizontal)
        self.buttonBox.setStandardButtons(QtWidgets.QDialogButtonBox.Cancel | QtWidgets.QDialogButtonBox.Ok)
        self.buttonBox.setObjectName("buttonBox")
        self.gridLayout.addWidget(self.buttonBox, 3, 0, 1, 1)
        self.lineEdit = QtWidgets.QLineEdit(self.gridLayoutWidget)
        self.lineEdit.setEnabled(True)
        self.lineEdit.setObjectName("lineEdit")
        self.gridLayout.addWidget(self.lineEdit, 1, 0, 1, 1)
        self.buttonBox.accepted.connect(self.__dialog.accept)
        self.buttonBox.rejected.connect(self.__dialog.reject)
        QtCore.QMetaObject.connectSlotsByName(self.__dialog)

    def __draw_captcha(self, image_bytes: bytes, background_bytes: bytes) -> QPixmap:
        image = QPixmap().fromImage(QImage().fromData(image_bytes))
        painter = QPainter()
        painter.begin(image)
        painter.setOpacity(0.25)
        painter.drawPixmap(0, 0, QPixmap().fromImage(QImage().fromData(background_bytes)))
        painter.end()
        return image

    def exec(self) -> str:
        if self.__dialog.exec():
            return self.lineEdit.text()
